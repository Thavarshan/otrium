name: Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux_tests:
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: ['7.4', '8.0']
        stability: [prefer-lowest, prefer-stable]
        include:
          - php: '8.1'
            flags: "--ignore-platform-req=php"
            stability: prefer-stable

    name: PHP ${{ matrix.php }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, memcached
          tools: composer:v2
          coverage: none

      - name: Load dummy data
        run: |
          sudo /etc/init.d/mysql start
          mysql -h 127.0.0.1 --port 33306 -u root CREATE DATABASE IF NOT EXISTS test
          mysql -h 127.0.0.1 --port 33306 -u root CREATE DATABASE IF NOT EXISTS otrium
          mysql -h 127.0.0.1 --port 33306 -u root --default-character-set=utf8 test < tests/Fixtures/test.sql
          mysql -h 127.0.0.1 --port 33306 -u root --default-character-set=utf8 otrium < data/otrium.sql

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress ${{ matrix.flags }}

      - name: Execute tests
        continue-on-error: ${{ matrix.php > 8 }}
        run: vendor/bin/phpunit --verbose
        env:
          DB_DATABASE: otrium
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USERNAME: root

  windows_tests:
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        php: ['7.4', '8.0']
        stability: [prefer-lowest, prefer-stable]
        include:
          - php: '8.1'
            flags: "--ignore-platform-req=php"
            stability: prefer-stable

    name: PHP ${{ matrix.php }} - ${{ matrix.stability }} - Windows

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, fileinfo, ftp, redis, memcached
          tools: composer:v2
          coverage: none

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress ${{ matrix.flags }}

      - name: Execute tests
        continue-on-error: ${{ matrix.php > 8 }}
        run: vendor/bin/phpunit --verbose
